global:
  commonLabels: {}
  commonAnnotations: {}

  # For TrueCharts charts so it doesnt try to take 200Gi of storage
  # fallbackDefaults:
  #   pvcSize: 1Gi
  #   vctSize: 1Gi

enabled: true 

dashboard:
  enabled: true
  ingressUrl: homarr.example.com
  entrypoint: websecure
  middlewares:
    - name: traefik-default-chain
      namespace: traefik 
  cert:
    reflectedSecret:
      enabled: true
      originNamespace: cert-manager
      originName: example-com-tls

oidcClient:
  reflectedSecret:
    enabled: true
    originNamespace: default
    originName: auth-oidc-secret

dbCredentials:
  reflectedSecret:
    enabled: true
    originNamespace: default
    originName: db-credentials

quota:
  enabled: true
  # Specification of the quotas resource
  rules: |
    hard:
      persistentvolumeclaims: "3"
      pods: "1"

networkPolicy:
  enabled: true
  ingress:
    traefikNamespace: traefik
    traefikPodSelector:
      matchLabels:
        app.kubernetes.io/name: traefik
        app.kubernetes.io/instance: traefik

# https://github.com/homarr-labs/charts/blob/dev/charts/homarr/values.yaml
homarr:
  enabled: true

  replicaCount: 1

  # Overrides chart's fullname
  fullnameOverride: "app-homarr"

  env:
    # Your local time zone
    TZ: "Europe/Amsterdam"
    # Enabled authentication methods. Multiple providers can be enabled with by separating them with , (ex. AUTH_PROVIDERS=credentials,oidc, it is highly recommended to just enable one provider).
    AUTH_PROVIDERS: "credentials"
    # AUTH_PROVIDERS: "credentials,oidc"
    AUTH_LOGOUT_REDIRECT_URL: "https://homarr.example.com"
    # Time for the session to time out. Can be set as pure number, which will automatically be used in seconds, or followed by s, m, h or d for seconds, minutes, hours or days. (ex: "30m")
    AUTH_SESSION_EXPIRY_TIME: "1d"
    #  Issuer URI of OIDC provider without trailing slash (/)
    # AUTH_OIDC_ISSUER: "https://issuer.example.com"
    # Display name of provider (in login screen)
    # AUTH_OIDC_CLIENT_NAME: "OIDC Provider"
    # Automatically redirect to OIDC login
    # AUTH_OIDC_AUTO_LOGIN: true
    # Override the OIDC scopes
    # AUTH_OIDC_SCOPE_OVERWRITE: "openid email profile groups"
    # Attribute used for groups (roles) claim
    # AUTH_OIDC_GROUPS_ATTRIBUTE: "groups"
    # Overwrite name attribute. By default, it will use preferred_username if it does not contain a @ and otherwise name.
    # AUTH_OIDC_NAME_ATTRIBUTE_OVERWRITE:

  # Resource configuration
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  database:
    # Enable external database
    externalDatabaseEnabled: false
  
  # Sensitive values that need to be passed in through environment variables should use kubernetes secrets. In order
  # to use this, create the secret in your target namespace before applying this helm chart. If you really want to,
  # you CAN just put these in the env block above, but that is not recommended.
  envSecrets:
    # The name of Auth OIDC existing secret
    authOidcCredentials:
      # -- Name of existing secret containing OIDC credentials
      existingSecret: "app-homarr-oidc"
      # -- ID of OIDC client (application) secret key
      oidcClientId: "client-id"
      # -- Secret of OIDC client (application) secret key
      oidcClientSecret: "client-secret"
    dbCredentials:
      # Name of existing secret containing DB credentials
      existingSecret: "db-credentials"
      # Secret key for SECRET_ENCRYPTION_KEY
      # can be generated with `openssl rand -hex 32`
      dbEncryptionKey: "db-encryption-key"
      # Only required 
      # # Secret key for DB_URL
      # # Example for internal database: `mysql://username:password@homarr-mysql:3306/homarrdb`
      # dbUrlKey: "db-url"
      # # Secret key for DB_PASSWORD
      # dbPasswordKey: "mysql-root-password"
      # # Secret key for database user
      # dbUserPasswordKey: "mysql-password"

  # Persistent storage configuration
  persistence:
    homarrDatabase:
      enabled: false
      name: "homarr-database"
      storageClassName: "longhorn"
      accessMode: "ReadWriteOnce"
      size: "50Mi"
      # homarr-database mount path inside the pod
      mountPath: "/appdata"
      volumeClaimName: ""
    homarrTrustedCerts:
      # Disable trusted certificates persistence
      enabled: false

  # Creates Role, ClusterRole, and associated bindings for Homarr's Kubernetes features
  rbac:
    # Enable to create RBAC resources and activate Kubernetes integration
    enabled: false
  
  # Service configuration
  service:
    enabled: true
    type: ClusterIP
    ports:
      app:
        port: 7575
        targetPort: http
        protocol: TCP
  
  # Ingress configuration
  ingress:
    # Disable ingress as we provide our own (traefik ingress)
    enabled: false
