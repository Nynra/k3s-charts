dashboard:
  enabled: true
  kubeviewIngressUrl: kubeview.example.com
  kubecostIngressUrl: kubecost.example.com
  middlewares:
    - name: traefik-default-chain
      namespace: traefik
  cert: 
    externalSecret:
      enabled: false
      secretName: kubecost-dash-tls
      secretStore: kubernetes
      storeType: ClusterSecretStore
    reflectedSecret:
      enabled: false
      originSecretName: kubecost-dash-tls
      originNamespace: kube-system

global:
  commonLabels: {}
  commonAnnotations: {} 

  thanos:
    enabled: false  # Set to true to enable Thanos for long-term storage.
  grafana:
    # We assume kubeprometheusstack is installed, so we disable Grafana here.
    enabled: false
    # Should be http://<grafana-service-name>.<grafana-namespace>.svc
    domainName: grafana.kubecost.svc.cluster.local
    # If kubecost should act as a proxy for grafana (route via internal grafana service)
    proxy: false

  prometheus:
    # We assume kubeprometheusstack is installed, so we disable Prometheus here.
    enabled: false
    # Should be http://<prometheus-service-name>.<prometheus-namespace>.svc:9090
    fqdn: prometheus.kubecost.svc.cluster.local
  platforms:
    ## Set options for deploying with CI/CD tools like Argo CD.
    cicd:
      enabled: false  # Set to true when using affected CI/CD tools for access to the below configuration options.
      skipSanityChecks: false  # If true, skip all sanity/existence checks for resources like Secrets.
  savedReports:
    enabled: true  # Set to true to enable saved reports functionality.
    reports:
      - title: "Daily Cost Report"
        window: "today"
        aggregateBy: "namespace"
        chartDisplay: "category"
        idle: "separate"
        rate: "cumulative"
        accumulate: false   # daily resolution
        filters:            # Ref: https://www.ibm.com/docs/en/kubecost/self-hosted/2.x?topic=filter-parameters-v2
          - key: "cluster"
            operator: ":"
            value: "dev"
      - title: "Monthly Cost Report"
        window: "month"
        aggregateBy: "controllerKind"
        chartDisplay: "category"
        idle: "share"
        rate: "monthly"
        accumulate: false
        filters:              # Ref: https://www.ibm.com/docs/en/kubecost/self-hosted/2.x?topic=filter-parameters-v2
          - key: "namespace"
            operator: "!:"
            value: "kubecost"
      - title: "Yearly Cost Report"
        window: "year"
        aggregateBy: "service"
        chartDisplay: "category"
        idle: "hide"
        rate: "daily"
        accumulate: true  # entire window resolution
        filters: []       # if no filters, specify empty array

kubecost:
  enabled: true
  upgrade:
    toV3: true  # Set to true to upgrade to v3 of Kubecost.

  ingress:
    # Disable chart ingress as we are using TraefikIngress
    enabled: false

  reporting:
    productAnalytics: false

  persistentVolume:
    enabled: false
    size: 4Gi

  networkCost:
    enabled: true

  prometheus:
    # We are assuming kubeprometheusstack is installed, so we disable Prometheus here.
    serviceAccounts:
      alertmanager: 
        create: false
      nodeExporter:
        create: false
      server:
        create: false

  # kubecostProductConfigs:
  #   clusterName: {{ .Values.clusterName }}
  #   projectID: {{ .Values.projectID }}  

  kubecostFrondend:
    enabled: true
    deployMethod: singlepod  # Ha not supported without enterprise license

    # set to true to set all upstreams to use <service>.<namespace>.svc.cluster.local instead of just <service>.<namespace>
    useDefaultFqdn: true

  kubecostModel:
    # The total number of hours the ETL pipelines will build
    # Set to 0 to disable hourly ETL (recommended for large environments)
    # Must be < prometheus server retention, otherwise empty data may overwrite
    # known-good data
    etlHourlyStoreDurationHours: 49
    # For deploying kubecost in a cluster that does not self-monitor
    etlReadOnlyMode: false

  # grafana:
  #   sidecar:
  #     dashboards:
  #       enabled: {{ .Values.grafana.dashboards.enabled }}
  #       label: {{ .Values.grafana.dashboards.discoveryLabel }} 

kubeview:
  enabled: true

  # -- Configure single namespace mode:
  # `false` - Show resources in all namespaces. This is the default.
  # `true` - Show resources only in namespace Kubeview is installed to.
  # "string" - Only show resources in the named namespace (can be *different* from the one Kubeview is installed to).
  singleNamespace: false 

  # -- If you want to hide certain namespaces, use a regular expression here, e.g. `kube-\|aks-`
  namespaceFilter: ''

  # -- Set to true to disable access to pod logs from the API and UI.
  disablePodLogs: false

  loadBalancer:
    # -- Set to true to enable the LoadBalancer service type
    enabled: true
    # -- Optionally set the LoadBalancer IP address if you want to use a static IP
    IP: ''

  nodePort:
    # -- Set to true to enable NodePort service type
    enabled: false
    # -- Optionally set the NodePort number, if you want to use a specific one
    port: 30000

  # -- This is to override the chart name when naming resources
  nameOverride: ''
  # -- This is to fully override the name of the chart & release when naming resources
  fullnameOverride: ''

  # -- Run multiple instances of the Kubeview pod
  replicaCount: 1

  # -- If you want to schedule the pods to specific nodes, you can set node selectors here
  nodeSelector: {}

  # -- If you want to set specific tolerations for the pods, you can set them here
  tolerations: []

  # -- If you want to set specific affinity rules for the pods, you can set them here
  affinity: {}